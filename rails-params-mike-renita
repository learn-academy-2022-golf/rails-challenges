Params

As a user, I can visit a page called cubed that takes a number as a param and displays that number cubed.

    def cubed
    @number = params[:number].to_i ** 3
    end

    <h1>Your input ... cubed!</h1>
<%= @number %>

As a user, I can visit a page called evenly that takes two numbers as params and displays whether or not the first number is evenly divisible by the second.

    def evenly
    @num1 = params[:num1].to_i
    @num2 = params[:num2].to_i
        if @num1 % @num2 == 0
            @display = "evenly divisible!"
        else
            @display = "that number is not evenly divisible"
        end 
    end


As a user, I can visit a page called palindrome that takes a string as a param and displays whether it is a palindrome (the same word forward and backward).

    def palindrome
    @input = params[:input]
        if @input.downcase == @input.downcase.reverse
            @output = "#{@input} is a palindrome"
        else
            @output = "#{@input} is not a palindrome"
        end
    end

As a user, I can visit a page called madlib that takes params of a noun, verb, adjective, adverb, and displays a short silly story.

<h1>Enjoy your silly story:</h1>
In this order, add to your url: noun, verb, adjective, adverb, separated by slashes.
<p>Once upon a time, there was a(n) <%= @adjective%> <%= @noun%> that could <%= @verb%> <%= @adverb%>.
<p>The End.</p>


<h1>Home Page</h1>
<ul>
<li><%= link_to 'Cubed Page','/cubed/2'%></li>
<li><%= link_to 'Evenly Page','/evenly/2/1'%></li>
<li><%= link_to 'Palindrome Page','/palindrome/racecar'%></li>
<li><%= link_to 'Mad Lib Page','/madlib/monkey/eat/fluffy/quickly'%></li>
</ul>

Rails.application.routes.draw do
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Defines the root path route ("/")
  # root "articles#index"
  root 'math#home'

  get '/cubed/:number' => 'math#cubed'
  get '/evenly/:num1/:num2' => 'math#evenly'
  get '/palindrome/:input/' => 'math#palindrome'
  get '/madlib/:noun/:verb/:adjective/:adverb' => 'math#madlib'
  
end

class MathController < ApplicationController
    def home

    end
    def cubed
    @number = params[:number].to_i ** 3

    end
    def evenly
    @num1 = params[:num1].to_i
    @num2 = params[:num2].to_i
        if @num1 % @num2 == 0
            @display = "evenly divisible!"
        else
            @display = "that number is not evenly divisible"
        end 

    end
    def palindrome
    @input = params[:input]
        if @input.downcase == @input.downcase.reverse
            @output = "#{@input} is a palindrome"
        else
            @output = "#{@input} is not a palindrome"
        end
    end
    def madlib
        @noun = params[:noun]
        @verb = params[:verb]
        @adjective = params[:adjective]
        @adverb = params[:adverb]
    end
end